/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';




export namespace Components {

  interface InnerA {}
  interface InnerAAttributes extends StencilHTMLAttributes {}

  interface InnerB {}
  interface InnerBAttributes extends StencilHTMLAttributes {}

  interface InnerC {}
  interface InnerCAttributes extends StencilHTMLAttributes {}

  interface InnerD {}
  interface InnerDAttributes extends StencilHTMLAttributes {}

  interface OuterA {}
  interface OuterAAttributes extends StencilHTMLAttributes {}

  interface OuterB {}
  interface OuterBAttributes extends StencilHTMLAttributes {}

  interface OuterC {}
  interface OuterCAttributes extends StencilHTMLAttributes {}

  interface OuterD {}
  interface OuterDAttributes extends StencilHTMLAttributes {}
}

declare global {
  interface StencilElementInterfaces {
    'InnerA': Components.InnerA;
    'InnerB': Components.InnerB;
    'InnerC': Components.InnerC;
    'InnerD': Components.InnerD;
    'OuterA': Components.OuterA;
    'OuterB': Components.OuterB;
    'OuterC': Components.OuterC;
    'OuterD': Components.OuterD;
  }

  interface StencilIntrinsicElements {
    'inner-a': Components.InnerAAttributes;
    'inner-b': Components.InnerBAttributes;
    'inner-c': Components.InnerCAttributes;
    'inner-d': Components.InnerDAttributes;
    'outer-a': Components.OuterAAttributes;
    'outer-b': Components.OuterBAttributes;
    'outer-c': Components.OuterCAttributes;
    'outer-d': Components.OuterDAttributes;
  }


  interface HTMLInnerAElement extends Components.InnerA, HTMLStencilElement {}
  var HTMLInnerAElement: {
    prototype: HTMLInnerAElement;
    new (): HTMLInnerAElement;
  };

  interface HTMLInnerBElement extends Components.InnerB, HTMLStencilElement {}
  var HTMLInnerBElement: {
    prototype: HTMLInnerBElement;
    new (): HTMLInnerBElement;
  };

  interface HTMLInnerCElement extends Components.InnerC, HTMLStencilElement {}
  var HTMLInnerCElement: {
    prototype: HTMLInnerCElement;
    new (): HTMLInnerCElement;
  };

  interface HTMLInnerDElement extends Components.InnerD, HTMLStencilElement {}
  var HTMLInnerDElement: {
    prototype: HTMLInnerDElement;
    new (): HTMLInnerDElement;
  };

  interface HTMLOuterAElement extends Components.OuterA, HTMLStencilElement {}
  var HTMLOuterAElement: {
    prototype: HTMLOuterAElement;
    new (): HTMLOuterAElement;
  };

  interface HTMLOuterBElement extends Components.OuterB, HTMLStencilElement {}
  var HTMLOuterBElement: {
    prototype: HTMLOuterBElement;
    new (): HTMLOuterBElement;
  };

  interface HTMLOuterCElement extends Components.OuterC, HTMLStencilElement {}
  var HTMLOuterCElement: {
    prototype: HTMLOuterCElement;
    new (): HTMLOuterCElement;
  };

  interface HTMLOuterDElement extends Components.OuterD, HTMLStencilElement {}
  var HTMLOuterDElement: {
    prototype: HTMLOuterDElement;
    new (): HTMLOuterDElement;
  };

  interface HTMLElementTagNameMap {
    'inner-a': HTMLInnerAElement
    'inner-b': HTMLInnerBElement
    'inner-c': HTMLInnerCElement
    'inner-d': HTMLInnerDElement
    'outer-a': HTMLOuterAElement
    'outer-b': HTMLOuterBElement
    'outer-c': HTMLOuterCElement
    'outer-d': HTMLOuterDElement
  }

  interface ElementTagNameMap {
    'inner-a': HTMLInnerAElement;
    'inner-b': HTMLInnerBElement;
    'inner-c': HTMLInnerCElement;
    'inner-d': HTMLInnerDElement;
    'outer-a': HTMLOuterAElement;
    'outer-b': HTMLOuterBElement;
    'outer-c': HTMLOuterCElement;
    'outer-d': HTMLOuterDElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
